Problem Statement:

Given a string of numbers and operators, return all possible results from computing all the different possible ways to group numbers and operators. The valid operators are +, - and *.

Example 1:
Input: "2-1-1"
Output: [0, 2]
Explanation: 
((2-1)-1) = 0 
(2-(1-1)) = 2

Example 2:
Input: "2*3-4*5"
Output: [-34, -14, -10, -10, 10]
Explanation: 
(2*(3-(4*5))) = -34 
((2*3)-(4*5)) = -14 
((2*(3-4))*5) = -10 
(2*((3-4)*5)) = -10 
(((2*3)-4)*5) = 10


Solution:
class Solution:
    def diffWaysToCompute(self, input: str) -> List[int]:
        
        ####### O(Nlogn)
        def divide(string):
            
            if string.isdigit():
                return [int(string)]
            
            ans=[]
            
            for each in range(len(string)):
                if string[each] in "*-+":
                    left=divide(string[:each])
                    right=divide(string[each+1:])
                    
                    for lt in left:
                        for rt in right:
                            if string[each]=="*":
                                ans.append(lt*rt)
                            elif string[each]=="+":
                                ans.append(lt+rt)
                            elif string[each]=="-":
                                ans.append(lt-rt)
                    
            return ans
        return divide(input)
                    
