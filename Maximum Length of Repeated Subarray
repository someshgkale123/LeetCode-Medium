Problem Statement:

Given two integer arrays A and B, return the maximum length of an subarray that appears in both arrays.
Example 1:
Input:
A: [1,2,3,2,1]
B: [3,2,1,4,7]
Output: 3
Explanation: 
The repeated subarray with maximum length is [3, 2, 1].


Solution:
class Solution:
    def findLength(self, A: List[int], B: List[int]) -> int:
        dp=[[0 for i in range(len(B)+1)] for j in range(len(A)+1)]
        mx=0
        for i in range(1,len(dp)):
            for j in range(1,len(dp[0])):
                if A[i-1]==B[j-1]:
                    dp[i][j]=1+dp[i-1][j-1]
                    if dp[i][j]>mx:
                        mx=dp[i][j]
        return mx
        
