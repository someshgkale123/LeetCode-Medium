Problem Statement:

Given a string s and an integer k.
Return the maximum number of vowel letters in any substring of s with length k.
Vowel letters in English are (a, e, i, o, u).

Example 1:
Input: s = "abciiidef", k = 3
Output: 3
Explanation: The substring "iii" contains 3 vowel letters.

Example 2:
Input: s = "aeiou", k = 2
Output: 2
Explanation: Any substring of length 2 contains 2 vowels.

Example 3:
Input: s = "leetcode", k = 3
Output: 2
Explanation: "lee", "eet" and "ode" contain 2 vowels.

Example 4:
Input: s = "rhythms", k = 4
Output: 0
Explanation: We can see that s doesn't have any vowel letters.

Example 5:
Input: s = "tryhard", k = 4
Output: 1


Solution:
class Solution:
    def maxVowels(self, s: str, k: int) -> int:
        """
        ############### High Run-time
        mx=0
        for i in range(len(s)-k+1):
            cnt=0
            temp=collections.Counter(s[i:i+k])
            if "a" in temp:
                cnt+=temp["a"]
            if "e" in temp:
                cnt+=temp["e"]
            if "i" in temp:
                cnt+=temp["i"]
            if "o" in temp:
                cnt+=temp["o"]
            if "u" in temp:
                cnt+=temp["u"]
            mx=max(mx,cnt)
        return mx
        """
        ############## Using Sliding window approach to lower the run-time
        mx=0
        i=0
        j=k
        temp=collections.Counter(s[i:j])
        while j!=len(s):
            mx=max(temp["a"]+temp["e"]+temp["i"]+temp["o"]+temp["u"],mx)
            temp[s[i]]-=1
            temp[s[j]]+=1
            i+=1
            j+=1
        mx=max(temp["a"]+temp["e"]+temp["i"]+temp["o"]+temp["u"],mx)
        return mx
