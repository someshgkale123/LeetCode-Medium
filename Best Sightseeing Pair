Problem Statement:

Given an array A of positive integers, A[i] represents the value of the i-th sightseeing spot, and two sightseeing spots i and j have distance j - i 
between them. The score of a pair (i < j) of sightseeing spots is (A[i] + A[j] + i - j) : the sum of the values of the sightseeing spots, 
minus the distance between them.
Return the maximum score of a pair of sightseeing spots.

Example 1:
Input: [8,1,5,2,6]
Output: 11
Explanation: i = 0, j = 2, A[i] + A[j] + i - j = 8 + 5 + 0 - 2 = 11


Solution:
class Solution:
    def maxScoreSightseeingPair(self, A: List[int]) -> int:
        """
        res=0
        dict={}
        dict[A[0]]=0
        for i in range(1,len(A)):
            for j,k in dict.items():
                temp=j+A[i]+(k-i)
                res=max(temp,res)
            dict[A[i]]=i
        return res
        """
        """
        res=0
        i=0
        j=len(A)-1
        while i<j:
            temp=A[i]+A[j]+(i-j)
            res=max(res,temp)
            if A[i]<A[j]:
                i+=1
            else:
                j-=1
        return res
        """
        index=0
        res=0
        for i in range(1,len(A)):
            res=max(res,A[index]+A[i]+(index-i))
            if A[i]+i-index>=A[index]:
                index=i
        return res
