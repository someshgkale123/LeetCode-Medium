Problem Statement:

Given two strings text1 and text2, return the length of their longest common subsequence.
A subsequence of a string is a new string generated from the original string with some 
characters(can be none) deleted without changing the relative order of the remaining characters. 
(eg, "ace" is a subsequence of "abcde" while "aec" is not). A common subsequence of two strings is a subsequence that is common to both strings.
If there is no common subsequence, return 0.

Example 1:
Input: text1 = "abcde", text2 = "ace" 
Output: 3  
Explanation: The longest common subsequence is "ace" and its length is 3.

Example 2:
Input: text1 = "abc", text2 = "abc"
Output: 3
Explanation: The longest common subsequence is "abc" and its length is 3.

Example 3:
Input: text1 = "abc", text2 = "def"
Output: 0
Explanation: There is no such common subsequence, so the result is 0.
 
 
Solution:
class Solution:
    def longestCommonSubsequence(self, text1: str, text2: str) -> int:
        """
        li=[]
        for i in text1:
            if i in text2:
                li.append(text2.index(i))
        print(li)
        if li:
            ans=1
            for i in range(len(li)-1):
                if li[i+1]>li[i]:
                    ans+=1
            return ans
        return 0
        """
        """
        li=""
        for i in text1: 
            if i in text2:
                li+=i
        print(li)
        print(text2)
        ans=0
        for i in range(len(li)):
            temp=i
            j=0
            cnt=0
            str=""
            while temp!=len(li):
                if li[temp] in text2[j:]:
                    if li[temp]==text2[j]:
                        str+=li[temp]
                        cnt+=1
                        temp+=1
                        j+=1
                    else:
                        j+=1
                else:
                    temp+=1
            print(str)
            ans=max(cnt,ans)
        return ans
        """
        dp=[[0 for i in range(len(text2))] for j in range(len(text1))]
        #print(dp)
        for i in range(len(dp)):
            for j in range(len(dp[0])):
                if text1[i]==text2[j]:
                    if (i-1)>=0 and (j-1)>=0:
                        dp[i][j]=dp[i-1][j-1]+1
                    else:
                        dp[i][j]=1
                else:
                    if (i-1)>=0:
                        a=dp[i-1][j]
                    else:
                        a=0
                    if (j-1)>=0:
                        b=dp[i][j-1]
                    else:
                        b=0
                    dp[i][j]=max(a,b)
        #print(dp)
        return(dp[len(text1)-1][len(text2)-1])
