Problem Statement:

Given a string, sort it in decreasing order based on the frequency of characters.

Example 1:
Input:
"tree"
Output:
"eert"
Explanation:
'e' appears twice while 'r' and 't' both appear once.
So 'e' must appear before both 'r' and 't'. Therefore "eetr" is also a valid answer.

Example 2:
Input:
"cccaaa"
Output:
"cccaaa"
Explanation:
Both 'c' and 'a' appear three times, so "aaaccc" is also a valid answer.
Note that "cacaca" is incorrect, as the same characters must be together.


Solution:
class Solution:
    def frequencySort(self, s: str) -> str:
        dict={}
        for i in s:
            if i not in dict:
                dict[i]=1
            else:
                dict[i]+=1
        return "".join([(i*j) for i,j in sorted(dict.items(),key=lambda i:i[1],reverse=True)])
        #res=""
        #print(new)
        #for i,j in new:
         #   res+=i*j
        #return res
