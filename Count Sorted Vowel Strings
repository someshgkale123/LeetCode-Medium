Problem Statement:


Given an integer n, return the number of strings of length n that consist only of vowels (a, e, i, o, u) and are lexicographically sorted.
A string s is lexicographically sorted if for all valid i, s[i] is the same as or comes before s[i+1] in the alphabet.

Example 1:
Input: n = 1
Output: 5
Explanation: The 5 sorted strings that consist of vowels only are ["a","e","i","o","u"].

Example 2:
Input: n = 2
Output: 15
Explanation: The 15 sorted strings that consist of vowels only are
["aa","ae","ai","ao","au","ee","ei","eo","eu","ii","io","iu","oo","ou","uu"].
Note that "ea" is not a valid string since 'e' comes after 'a' in the alphabet.

Example 3:
Input: n = 33
Output: 66045


Solution:
class Solution:
    def countVowelStrings(self, n: int) -> int:
        #### O(N);O(1)
        wordpool=[1,1,1,1,1]
        total=5
        if n==1:
            return total
        for i in range(2,n+1):
            temp=[0,0,0,0,0]
            temp[0]=total
            for word in range(1,len(temp)):
                temp[word]=temp[word-1]-wordpool[word-1]
            total=sum(temp)
            wordpool=temp
        return total
            
            
