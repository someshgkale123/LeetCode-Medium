Problem Statement:

Given string S and a dictionary of words words, find the number of words[i] that is a subsequence of S.

Example :
Input: 
S = "abcde"
words = ["a", "bb", "acd", "ace"]
Output: 3
Explanation: There are three words in words that are a subsequence of S: "a", "acd", "ace".




Solution:
class Solution:
    def numMatchingSubseq(self, S: str, words: List[str]) -> int:
        ###### O(NM),O(N) N be the length of set(words) and M be the maximum word length
        cnt=0
        counter=collections.Counter(words)
        for word in counter:
            match=0
            for char in word:
                match=S.find(char,match)+1
                print(match)
                if match==0:
                    break
            else:
                cnt+=counter[word]
        return cnt
        
