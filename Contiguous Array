Problem Statement:

Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1.
Example 1:
Input: [0,1]
Output: 2
Explanation: [0, 1] is the longest contiguous subarray with equal number of 0 and 1.

Example 2:
Input: [0,1,0]
Output: 2
Explanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.


Solution:
class Solution:
    def findMaxLength(self, nums: List[int]) -> int:
        maxx=0
        cnt=0
        dict={0:-1}
        for i in range(len(nums)):
            if nums[i]==0:
                cnt-=1
            else:
                cnt+=1
                
            if cnt in dict:
                maxx=max(maxx,i-dict[cnt])
            else:
                dict[cnt]=i
        return maxx
