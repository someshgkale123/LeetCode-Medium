Problem Statement:

Given a sorted integer array without duplicates, return the summary of its ranges.

Example 1:
Input:  [0,1,2,4,5,7]
Output: ["0->2","4->5","7"]
Explanation: 0,1,2 form a continuous range; 4,5 form a continuous range.

Example 2:
Input:  [0,2,3,4,6,8,9]
Output: ["0","2->4","6","8->9"]
Explanation: 2,3,4 form a continuous range; 8,9 form a continuous range.



Solution:
class Solution:
    def summaryRanges(self, nums: List[int]) -> List[str]:
        '''
        #brute force###
        if len(nums)<=1:
            return list(map(str,nums))
        li=[]
        temp=[]
        for i in range(1, len(nums)):
            if nums[i]-nums[i-1]==1:
                temp.append(nums[i])
                temp.append(nums[i-1])
            else:
                if not temp:
                    temp.append(nums[i-1])
                    li.append(temp)
                    temp=[]
                else:
                    li.append(temp)
                    temp=[]
                temp.append(nums[i])
        li.append(temp)
        print(li)
        
        for i in range(len(li)):
            if len(li[i])>1:
                li[i]=("{}->{}".format(min(li[i]),max(li[i])))
            else:
                li[i]="{}".format(*li[i])
        return(li)
        #######
        '''
        li=[]
        i=0
        while i<len(nums):
            start=i
            j=i+1
            while j<len(nums) and nums[j]==nums[j-1]+1:
                j+=1
            end=j
            if end -start>1:
                li.append("{}->{}".format(nums[start],nums[end-1]))
            else:
                li.append("{}".format(nums[start]))
            i=j
        return li
