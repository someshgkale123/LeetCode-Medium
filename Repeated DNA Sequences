Problem Statement:

All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: "ACGAATTCCG". When studying DNA, 
it is sometimes useful to identify repeated sequences within the DNA.
Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.

Example:
Input: s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT"
Output: ["AAAAACCCCC", "CCCCCAAAAA"]


Solution:
class Solution:
    def findRepeatedDnaSequences(self, s: str) -> List[str]:
        dict={}
        for i in range(len(s)-10+1):
            temp=s[i:i+10]
            if temp not in dict:
                dict[temp]=1
            else:
                dict[temp]+=1
       
        li = [i for i,j in dict.items() if j>1]
        if not li:
            return []
        return li
