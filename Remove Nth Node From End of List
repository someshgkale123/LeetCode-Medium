Problem Statement:

Given a linked list, remove the n-th node from the end of list and return its head.
Example:
Given linked list: 1->2->3->4->5, and n = 2.
After removing the second node from the end, the linked list becomes 1->2->3->5.


Solution:

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def removeNthFromEnd(self, head, n):
        """
        :type head: ListNode
        :type n: int
        :rtype: ListNode
        """
        
        N=1
        f=l=head
        while f.next:
            N+=1
            f=f.next
            if N>n+1:
                l=l.next
        if N==n:
            return head.next
        else:
            l.next=l.next.next
            return head
            
        
