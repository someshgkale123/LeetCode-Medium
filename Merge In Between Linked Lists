Problem Statement:

You are given two linked lists: list1 and list2 of sizes n and m respectively.
Remove list1's nodes from the ath node to the bth node, and put list2 in their place.
The blue edges and nodes in the following figure incidate the result:
Build the result list and return its head.

Example 1:
Input: list1 = [0,1,2,3,4,5], a = 3, b = 4, list2 = [1000000,1000001,1000002]
Output: [0,1,2,1000000,1000001,1000002,5]
Explanation: We remove the nodes 3 and 4 and put the entire list2 in their place. The blue edges and nodes in the above figure indicate the result.

Example 2:
Input: list1 = [0,1,2,3,4,5,6], a = 2, b = 5, list2 = [1000000,1000001,1000002,1000003,1000004]
Output: [0,1,1000000,1000001,1000002,1000003,1000004,6]
Explanation: The blue edges and nodes in the above figure indicate the result.


SOlution:
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeInBetween(self, list1: ListNode, a: int, b: int, list2: ListNode) -> ListNode:
        
        ###### O(max(n,m)); O(1)
        
        # intialize interval start and end pointer in list1
        start=None
        end=None
        
        # set prev and temp pointer to track current and previous value
        prev=None
        temp=list1
        while temp:
            
            # if current temp value is a, set prev as list1 interval start  
            if temp.val==a:
                if prev:
                    start=prev
            
            # if current temp value is b, set temp.next and list1 interval end
            if temp.val==b:
                end=temp.next
                break
            
            # else increment pointers
            prev=temp
            temp=temp.next
        
        # now traverse on list2 to find list2 end pointer
        prev1=None
        temp1=list2
        while temp1:
            prev1=temp1
            temp1=temp1.next
        
        # set list1 interval start to start of list2 and set list2 end pointer to list1 interval end
        start.next=list2
        prev1.next=end
        
        # return merged list viz. list1
        return list1
            
