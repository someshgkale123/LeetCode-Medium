Problem Statement:

Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers (h, k), 
where h is the height of the person and k is the number of people in front of this person who have a height greater than or equal to h. 
Write an algorithm to reconstruct the queue.
Note:
The number of people is less than 1,100.

Example
Input:
[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]
Output:
[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]



SOlution:
class Solution:
    def reconstructQueue(self, people: List[List[int]]) -> List[List[int]]:
        """
        srt=sorted(people)
        
        for i in range(len(srt)):
            value=srt[i]
            indx=people.index(value)
            curr=0
            j=0
            while j!=value[1]:
                if people[curr][0]>=value[0] and people[indx]!=people[curr]:
                    j+=1
                if j==value[1]:
                    break
                #elif people[curr][0]==value[0] and people[curr][1]<=value[1]:
                 #   j+=1
              
                curr+=1
            if people[curr][0]>people[indx][0]:
            people[indx],people[curr]=people[curr],people[indx]
            print(people)
        """
        x=sorted(people, key=lambda x: (-x[0],x[1]))
        li=[]
        for i in x:
            li.insert(i[1],i)
        return(li)
             
