Problem Statement:

Given a string s and an integer k, return the length of the longest substring of s that contains at most k distinct characters.

Example 1:
Input: s = "eceba", k = 2
Output: 3
Explanation: The substring is "ece" with length 3.

Example 2:
Input: s = "aa", k = 1
Output: 2
Explanation: The substring is "aa" with length 2.


Solution:
class Solution:
    def lengthOfLongestSubstringKDistinct(self, s: str, k: int) -> int:
        
        ###### O(N);O(N)
        
        left=0
        freq=defaultdict(int)
        mx=0
        
        for each in range(len(s)):
            freq[s[each]]+=1
            
            while len(freq)>k:
                freq[s[left]]-=1
                if freq[s[left]]==0:
                    del freq[s[left]]
                left+=1
            # print(each,left)
            mx=max(mx,each-left+1)
            
        return mx
