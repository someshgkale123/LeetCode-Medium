Problem Statement:

Given an array nums containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least one duplicate number must exist. 
Assume that there is only one duplicate number, find the duplicate one.

Example 1:
Input: [1,3,4,2,2]
Output: 2

Example 2:
Input: [3,1,3,4,2]
Output: 3

Solution:
class Solution:
    def findDuplicate(self, nums: List[int]) -> int:
        li=set()
        for i in nums:
            if i not in li:
                li.add(i)
            else:
                return i
        ########## Using binary search and O(1) constant space
        """
        left=1
        right=len(nums)-1
        while left<right:
            middle=(left+right)//2
            if sum(1 for i in range(len(nums)) if nums[i]<=middle)>middle:
                   right=middle
            else:
                   left=middle+1
        return left
        """
