Problem Statement:

Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1. 
In other words, one of the first string's permutations is the substring of the second string.

Example 1:
Input: s1 = "ab" s2 = "eidbaooo"
Output: True
Explanation: s2 contains one permutation of s1 ("ba").

Example 2:
Input:s1= "ab" s2 = "eidboaoo"
Output: False


SOlution:
class Solution:
    def checkInclusion(self, s1: str, s2: str) -> bool:
        verify=collections.Counter(s1)
        for i in range(len(s2)-len(s1)+1):
            if i==0:
                check=collections.Counter(s2[:len(s1)])
            else:
                prev=s2[i-1]
                check[prev]-=1
                if check[prev]==0:
                    check.pop(prev)
                next=s2[len(s1)+i-1]
                check[next]+=1
            #print(check)
            if check==verify:
                return True
        return False
 
