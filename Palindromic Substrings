Problem Statement:

Given a string, your task is to count how many palindromic substrings in this string.
The substrings with different start indexes or end indexes are counted as different substrings even they consist of same characters.

Example 1:
Input: "abc"
Output: 3
Explanation: Three palindromic strings: "a", "b", "c".
 
Example 2:
Input: "aaa"
Output: 6
Explanation: Six palindromic strings: "a", "a", "a", "aa", "aa", "aaa".


Solution:
class Solution:
    def countSubstrings(self, s: str) -> int:
        ######## O(N^2),O(N)
        """
        if not s:
            return 0
        
        def expandmiddle(s,start,end):
            while start>=0 and end<len(s) and s[start]==s[end]:
                if (start,end) not in st:
                    st.add((start,end))
                start-=1
                end+=1
            return
                
        st=set()
        for i in range(len(s)):
            expandmiddle(s,i,i)
            expandmiddle(s,i,i+1)
            
       
        return len(st)
        """
        ########## O(N^2),O(1)
        if not s:
            return 0
        
        def expandmiddle(s,start,end):
            while start>=0 and end<len(s) and s[start]==s[end]:
                self.res+=1 
                start-=1
                end+=1
            return
                
        self.res=0
        for i in range(len(s)):
            expandmiddle(s,i,i)
            expandmiddle(s,i,i+1)
       
        return self.res
