Problem Statement:

Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:
Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.

Example 2:
Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.




Solution:
class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        if not nums:
            return 0
        
        maxx=nums[0]
        dp=[[nums[i]] for i in range(len(nums))]
       
        for i in range(1,len(nums)):
            mn=min(dp[i-1])
            mx=max(dp[i-1])
            dp[i]+=[mn*nums[i],mx*nums[i]]
            maxx=max(maxx,max(dp[i]))
            
        return maxx
